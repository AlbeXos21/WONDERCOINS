"use strict";var render_hoards={ar_rows:[],caller:null,draw_item:function(row){const fragment=new DocumentFragment;if(null!==row.name&&row.name.length>0){const wrapper=common.create_dom_element({element_type:"div",class_name:"row_wrapper",parent:fragment}),map_wrapper=common.create_dom_element({element_type:"div",class_name:"map_wrapper hide_opacity",parent:wrapper});if(row.map){const observer=new IntersectionObserver((function(entries){const entry=entries[1]||entries[0];if(!0===entry.isIntersecting||entry.intersectionRatio>0){observer.disconnect();const map_position=row.map,container=map_wrapper,map=new map_factory;let map_data_clean;if(map.init({map_container:map_wrapper,map_position:map_position,popup_builder:page.map_popup_builder,popup_options:page.maps_config.popup_options,source_maps:page.maps_config.source_maps,add_layer_control:!1}),row.georef_geojson){const popup_data={section_id:row.section_id,title:row.name,description:row.public_info.trim(),type:"findspots"===row.table?"findspot":"hoard"};map_data_clean=hoards.map_data_geojson(row.georef_geojson,popup_data)}else map_data_clean=hoards.map_data_point(row.map,row.name);map.parse_data_to_map(map_data_clean,null).then((function(){container.classList.remove("hide_opacity")}))}}),{threshold:[0]});observer.observe(map_wrapper)}const info_wrap=common.create_dom_element({element_type:"div",class_name:"info_wrap",parent:wrapper}),title_wrap=common.create_dom_element({element_type:"div",class_name:"title_wrap",parent:info_wrap}),target_path="findspots"===row.table?"findspot":"hoard",hoard_uri=page_globals.__WEB_ROOT_WEB__+"/"+target_path+"/"+row.section_id,hoard_uri_text='<span class="icon_link"></span>';common.create_dom_element({element_type:"a",href:hoard_uri,inner_html:row.name+hoard_uri_text,class_name:"name",target:"_blank",parent:title_wrap});const place=row.place||"";common.create_dom_element({element_type:"div",class_name:"label",inner_html:place,parent:title_wrap});const info_text_wrap=common.create_dom_element({element_type:"div",class_name:"info_text_wrap",parent:info_wrap});if(row.coins&&row.coins.length>0){const n_coins=row.coins.length;common.create_dom_element({element_type:"span",class_name:"",inner_html:(tstring.total_coins||"Total coins")+": "+n_coins,parent:info_text_wrap})}}return fragment}};